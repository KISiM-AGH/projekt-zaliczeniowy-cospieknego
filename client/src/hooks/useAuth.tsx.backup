import { useState, useEffect, useContext } from 'react';

import { AuthContext } from '../context/auth';

interface IStoredUsed {
    username: string;
    token: string;
}

export default function useAuth() {
    const [user, setUser] = useState<IStoredUsed | undefined>(
        JSON.parse(localStorage.getItem('authUser') || '{}')
    );

    const { auth } = useContext(AuthContext);

    useEffect(() => {
        // auth();
        // console.log('Current user: ', user);
    }, []);

    const auth2 = async () => {
        const response = await fetch('http://localhost:8080/api/v1/auth');
        // add authorization
        const currentUser = await response.json();
        setUser(currentUser);
    };

    const login = async () => {
        // TEST
        const response = await fetch('http://localhost:8080/api/v1/login', {
            method: 'POST',
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                email: 'test@gmail.com',
                password: '1234',
            }),
        });
        const user = await response.json();
        setUser(user);
    };

    return user;
}
